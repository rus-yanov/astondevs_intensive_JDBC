plugins {
    id 'war'
    id 'checkstyle'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    testImplementation 'org.mockito:mockito-core:2.1.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.11'

    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'jstl:jstl:1.2'
    implementation 'org.postgresql:postgresql:42.5.1'
    implementation 'com.h2database:h2:2.1.214'
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava.options.encoding = 'UTF-8'

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('jacocoReport')
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}
